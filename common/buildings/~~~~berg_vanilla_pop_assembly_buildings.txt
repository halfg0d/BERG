#############
# Robot buildings
#############

building_robot_assembly_plant = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { berg_is_robotic = yes }
		}
		owner = {
			is_regular_empire = yes
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
			NAND = {
				berg_has_bug_mod = no
				is_bugged_machine_cult = no
			}
		}
		NOT = { has_modifier = slave_colony }
		OR = {
			berg_has_bug_mod = no
			AND = {
				berg_has_avb_mod = yes
				owner = { is_bugged_machine_cult = no }
			}
		}
	}

	convert_to = {
		building_bugged_mecha_monastery
		building_machine_assembly_plant
	}

	upgrades = {
		building_robot_assembly_complex
	}

	allow = {
		hidden_trigger = {
			OR = {
				owner = { is_ai = no }
				NAND = {
					free_district_slots = 0
					free_building_slots <= 1
					free_housing <= 0
					free_jobs <= 0
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
			AND = {
				is_bugged_machine_cult = yes
				berg_has_bug_mod = yes
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_robot_script
		tier = 1
	}
	inline_script = {
		script = building_resources/vanilla/robot_plant
		tier = 1
	}
	show_tech_unlock_if = {
		NAND = {
			berg_has_bug_mod = no
			is_bugged_machine_cult = no
		}
	}
	prerequisites = {
		"tech_robotic_workers"
	}
	show_tech_unlock_if = {
		OR = {
			berg_has_bug_mod = no
			AND = {
				is_bugged_machine_cult = no
				berg_has_bug_mod = yes
			}
		}
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = robot_assembly_plant
		TRIGGER = " "
	}
}

building_robot_assembly_complex = {
	icon = building_machine_assembly_complex
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { berg_is_robotic = yes }
		}
		owner = {
			is_regular_empire = yes
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
			NAND = {
				berg_has_bug_mod = no
				is_bugged_machine_cult = no
			}
		}
		NOT = { has_modifier = slave_colony }
		OR = {
			berg_has_bug_mod = no
			AND = {
				berg_has_avb_mod = yes
				owner = { is_bugged_machine_cult = no }
			}
		}
	}

	convert_to = {
		building_machine_assembly_complex
	}
	upgrades = {
		"building_avb_robot_assembly_plant_2"
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
			AND = {
				is_bugged_machine_cult = yes
				berg_has_bug_mod = yes
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_robot_script
		tier = 2
	}
	inline_script = {
		script = building_resources/vanilla/robot_plant
		tier = 2
	}
	show_tech_unlock_if = {
		NAND = {
			berg_has_bug_mod = no
			is_bugged_machine_cult = no
		}
	}
	prerequisites = {
		tech_robot_assembly_complex
	}
	show_tech_unlock_if = {
		OR = {
			berg_has_bug_mod = no
			AND = {
				is_bugged_machine_cult = no
				berg_has_bug_mod = yes
			}
		}
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = robot_assembly_complex
		TRIGGER = " "
	}
}
building_avb_robot_assembly_plant_2 = {
	base_buildtime = @avb_b4_time
	can_build = no

	category = pop_assembly
	
	potential = {
		berg_has_avb_mod = yes
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_robotic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
			NAND = {
				berg_has_bug_mod = no
				is_bugged_machine_cult = no
			}
		}
		NOT = { has_modifier = slave_colony }
		OR = {
			berg_has_bug_mod = no
			AND = {
				berg_has_avb_mod = yes
				owner = { is_bugged_machine_cult = no }
			}
		}
	}
	
	allow = {
		has_upgraded_capital_4 = yes
	}
	
	convert_to = {
		building_bugged_mecha_monastery_two
		building_avb_machine_assembly_plant_2
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
			AND = {
				is_bugged_machine_cult = yes
				berg_has_bug_mod = yes
			}
		}
	}
	
	inline_script = {
		script = vanilla/pop_assembly/berg_robot_script
		tier = 3
	}
	inline_script = {
		script = building_resources/vanilla/robot_plant
		tier = 3
	}
	show_tech_unlock_if = {
		NAND = {
			berg_has_bug_mod = no
			is_bugged_machine_cult = no
		}
	}
	prerequisites = {
		"tech_avb_robot_assembly_plant_2"
	}
	show_tech_unlock_if = {
		OR = {
			berg_has_bug_mod = no
			AND = {
				is_bugged_machine_cult = no
				berg_has_bug_mod = yes
			}
		}
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_robot_assembly_plant_2
		TRIGGER = " "
	}
}

#############
# Machine buildings
#############

building_machine_assembly_plant = {
	icon = building_robot_assembly_plant
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		owner = { is_machine_empire = yes }
		NOT = { has_modifier = crucible_colony }
	}

	convert_to = {
		building_robot_assembly_plant
	}

	allow = {
		hidden_trigger = {
			OR = {
				owner = { is_ai = no }
				NAND = {
					free_district_slots = 0
					free_building_slots <= 1
					free_housing <= 0
					free_jobs <= 0
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_robot_empire = no }
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_machine_script
		tier = 1
	}
	inline_script = {
		script = building_resources/vanilla/machine_plant
		tier = 1
	}

	upgrades = {
		building_machine_assembly_complex
	}

	prerequisites = {

	}
	is_essential = yes
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = machine_assembly_plant
		TRIGGER = " "
	}
}

building_machine_assembly_complex = {
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	potential = {
		exists = owner
		owner = { is_machine_empire = yes }
		NOT = { has_modifier = crucible_colony }
	}

	convert_to = {
		building_robot_assembly_complex
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_machine_script
		tier = 2
	}
	inline_script = {
		script = building_resources/vanilla/machine_plant
		tier = 2
	}
	prerequisites = {
		tech_mega_assembly
	}
	upgrades = {
		"building_eutab_automation_sector" #EUTAB
		"building_avb_machine_assembly_plant_2" #AVB
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = machine_assembly_complex
		TRIGGER = " "
	}
}
building_avb_machine_assembly_plant_2 = {
	icon = building_avb_robot_assembly_plant_2
	base_buildtime = @avb_b4_time
	can_build = no

	category = pop_assembly
	
	potential = {
		berg_has_avb_mod = yes
		exists = owner
		owner = { is_machine_empire = yes }
		NOT = { has_modifier = crucible_colony }
	}
	allow = {
		has_upgraded_capital_4 = yes
	}
	
	convert_to = {
		building_avb_robot_assembly_plant_2
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_machine_script
		tier = 3
	}
	inline_script = {
		script = building_resources/vanilla/machine_plant
		tier = 3
	}
	prerequisites = {
		"tech_avb_machine_assembly_plant_2"
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_machine_assembly_plant_2
		TRIGGER = " "
	}
}

#############
# Hive buildings
#############

building_spawning_pool = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			berg_is_progenitor_empire = no
		}
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				berg_is_progenitor_empire = yes
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_pool_script
		tier = 1
	}
	inline_script = {
		script = building_resources/vanilla/spawning_pool
		tier = 1
	}

	convert_to = {
		building_offspring_nest
	}
	upgrades = {
		"building_eutab_spawning_garden" # EUTAB
		"building_avb_spawning_pool_2" #AVB
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = spawning_pool
		TRIGGER = " "
	}
}
building_avb_spawning_pool_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = amenity
	
	potential = {
		berg_has_avb_mod = yes
		exists = owner
		owner = {
			is_hive_empire = yes
			NOT = { has_origin = origin_progenitor_hive }
		}
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}
	convert_to = {
		building_avb_offspring_nest_2
	}
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				has_origin = origin_progenitor_hive
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_pool_script
		tier = 2
	}
	inline_script = {
		script = building_resources/vanilla/spawning_pool
		tier = 2
	}
	
	prerequisites = {
		"tech_avb_spawning_pool_2"
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_spawning_pool_2
		TRIGGER = " "
	}
}

building_offspring_nest = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		owner = { berg_is_progenitor_empire = yes }
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = { berg_is_progenitor_empire = no }
	}

	inline_script = {
		script = vanilla/pop_assembly/berg_pool_script
		tier = 1
	}
	inline_script = {
		script = building_resources/vanilla/offspring_nest
		tier = 1
	}
	
	convert_to = {
		building_spawning_pool
	}

	upgrades = {
		"building_avb_offspring_nest_2"
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = offspring_nest
		TRIGGER = " "
	}
}
building_avb_offspring_nest_2 = {
	base_buildtime = @avb_b2_time

	can_build = no
	category = pop_assembly

	potential = {
		berg_has_avb_mod = yes
		exists = owner
		owner = { has_origin = origin_progenitor_hive }
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = { NOT = { has_origin = origin_progenitor_hive } }
	}

	allow = {
		has_major_upgraded_capital = yes
	}

	#ruined_trigger = {
	#	has_planet_flag = offspring_defeated
	#}

	convert_to = {
		building_avb_spawning_pool_2
	}

	prerequisites = {
		tech_avb_offspring_nest_2
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_pool_script
		tier = 2
	}
	inline_script = {
		script = building_resources/vanilla/offspring_nest
		tier = 2
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_offspring_nest_2
		TRIGGER = " "
	}
}

#######################################
# Necrophage "consumption" buildings
#######################################

building_necrophage_elevation_chamber = {
	icon = building_chamber_of_elevation_1
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 100
	skip_automation_upgrading = yes #colony automation will not try to upgrade this

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_elevation_chamber_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_elevation_chamber_desc_hive
	}

	category = pop_assembly

	potential = {
		exists = owner
		owner = {
			berg_is_necrophage_empire = yes
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		if = {
			limit = { owner = { is_hive_empire = no } }
			berg_is_hive_world = no
		}
		berg_is_machine_world = no
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
				num_pops > 5
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					berg_is_necrophage_empire = no
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}
	planet_modifier = {
		job_necro_apprentice_add = 1
	}

	#you are not meant to run out of necrophaging pops on a planet with this building
	triggered_planet_modifier = {
		potential = {
			num_organic_pops_per_year >= 0.2
		}
		job_necro_apprentice_add = 1
	}
	triggered_planet_modifier = {
		potential = {
			num_organic_pops_per_year >= 0.3
		}
		job_necro_apprentice_add = 1
	}
	inline_script = vanilla/pop_assembly/berg_necrophage_desc

	triggered_desc = {
		text = building_necrophage_elevation_chamber_scaling_tooltip
	}
	
	inline_script = {
		script = building_resources/vanilla/necrophage
		tier = 1
	}

	upgrades = {
		building_necrophage_house_of_apotheosis
	}

	prerequisites = {
	}

	is_essential = yes
}

building_necrophage_house_of_apotheosis = {
	icon = building_chamber_of_elevation_2
	base_buildtime = @b3_time
	can_build = no
	position_priority = 100

	category = pop_assembly

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_house_of_apotheosis_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_house_of_apotheosis_desc_hive
	}

	potential = {
		exists = owner
		owner = {
			berg_is_necrophage_empire = yes
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
			is_ai = no #the AI will just kill all its necrophytes
		}
	}

	allow = {
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					berg_is_necrophage_empire = no
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}

	planet_modifier = {
		job_necro_apprentice_add = 6
	}

	triggered_planet_modifier = {
		potential = {
			berg_is_hive_world = yes
			exists = owner
			owner = { is_hive_empire = yes }
		}
		job_necro_apprentice_add = 4
	}
	inline_script = vanilla/pop_assembly/berg_necrophage_desc

	inline_script = {
		script = building_resources/vanilla/necrophage
		tier = 2
	}

	prerequisites = {
		tech_glandular_acclimation
	}

	show_tech_unlock_if = {
		berg_is_necrophage_empire = yes
	}
}

#############
# Clone vats
#############

building_clone_vats = {
	base_buildtime = @b1_time

	category = pop_assembly

	base_cap_amount = 1

	potential = {
		exists = owner
		owner = { has_tradition = tr_genetics_adopt }
		NOT = { has_modifier = resort_colony }
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			NOT = { owner = { has_tradition = tr_genetics_adopt } }
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_clone_vats_script
		tier = 1
	}
	inline_script = {
		script = building_resources/vanilla/clone_vats
		tier = 1
	}
	upgrades = {
		"building_eutab_adv_clone_vats" # EUTAB
		"building_avb_clone_vats_2"
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = clone_vats
		TRIGGER = " "
	}
}
building_avb_clone_vats_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = pop_assembly
	
	potential = {
		berg_has_avb_mod = yes
		exists = owner
		owner = { has_tradition = tr_genetics_adopt }
		NOT = { has_modifier = resort_colony }
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			NOT = { owner = { has_tradition = tr_genetics_adopt } }
		}
	}

	inline_script = {
		script = vanilla/pop_assembly/berg_clone_vats_script
		tier = 2
	}
	inline_script = {
		script = building_resources/vanilla/clone_vats
		tier = 2
	}
	prerequisites = {
		"tech_avb_clone_vats_2"
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_clone_vats_2
		TRIGGER = " "
	}
}

building_clone_army_clone_vat = {
	icon = building_ancient_relics
	base_buildtime = 90
	position_priority = 100

	empire_limit = {
		base = 5
	}

	category = pop_assembly

	potential = {
		exists = owner
		owner = {
			berg_is_clone_army_empire = yes
			NOT = {
				has_country_flag = clone_army_fertility_unlocked
			}
		}
		if = {
			limit = {
				owner = { is_ai = yes }
			}
			NOR = {
				has_building = building_clone_army_clone_vat
				AND = {
					exists = assembling_species
					assembling_species = { berg_is_robotic = yes }
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					berg_is_clone_army_empire = no
					is_synthetic_empire = yes
					has_country_flag = clone_army_fertility_unlocked
				}
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_clone_army_script
	}
	#BugBranch
	triggered_planet_modifier = {
		potential = {
			berg_has_bug_mod = yes
			exists = owner
			owner = {
				is_bugged_evolutionary_architects = yes
			}
		}
		modifier = {
			planet_jobs_unity_produces_mult = 0.1

		}
	}
	#
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			trigger = { berg_has_osa_mod = no }
			energy = @b2_upkeep
		}
		upkeep = {
			trigger = { berg_has_osa_mod = yes }
			energy = 5
			minerals = 5
		}
	}

	upgrades = {
		building_avb_clone_army_clone_vat_2
	}

	prerequisites = {
	}

	is_essential = yes
	ai_estimate_without_unemployment = yes
}
building_avb_clone_army_clone_vat_2 = {
	base_buildtime = 900
	position_priority = 100
	prerequisites = { tech_avb_clone_army_vats_2 }
	can_build = no

	category = pop_assembly

	potential = {
		avb_hg_changes = yes
		exists = owner
		owner = {
			has_origin = origin_clone_army
			has_clone_full_path = yes
		}
		if = {
			limit = {
				owner = { is_ai = yes }
			}
			NOR = {
				has_building = building_avb_clone_army_clone_vat_2
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_clone_army }
					is_synthetic_empire = yes
					has_clone_full_path = no
				}
			}
		}
	}

	#BugBranch
	triggered_planet_modifier = {
		potential = {
			berg_has_bug_mod = yes
			exists = owner
			owner = {
				is_bugged_evolutionary_architects = yes
			}
		}
		modifier = {
			planet_jobs_unity_produces_mult = 0.1

		}
	}
	#
	inline_script = pop_assembly/avb_clone_army_vat_t2

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
		}
		upkeep = {
			energy = @avb_b3_upkeep
		}
	}
	triggered_desc = {
		text = building_clone_army_clone_vat_2_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}

	is_essential = yes
	ai_estimate_without_unemployment = yes
}

#############
# Permanent Employment Building
#############

building_posthumous_employment_center = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = {
			is_regular_empire = yes
			berg_is_permanent_employment = yes
		}
	}

	allow = {
		has_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				berg_is_permanent_employment = no
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_posthumous_script
		tier = 1
	}
	inline_script = {
		script = building_resources/vanilla/posthumous
		tier = 1
	}
	upgrades = {
		"building_avb_posthumous_employment_center_2" #AVB
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = posthumous_employment_center
		TRIGGER = " "
	}
}
building_avb_posthumous_employment_center_2 = {
	base_buildtime = @avb_b3_time
	can_build = no

	category = pop_assembly

	potential = {
		avb_hg_changes = yes
		berg_has_avb_mod = yes
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = {
			is_regular_empire = yes
			has_valid_civic = civic_permanent_employment
		}
	}

	allow = {
		has_fully_upgraded_capital = yes
	}

	prerequisites = {
		"tech_avb_posthumous_employment_center_2"
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_valid_civic = civic_permanent_employment }
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

#	on_destroy = {
#		every_owned_pop = {
#			limit = {
#				has_modifier = avb_zombie_buff
#			}
#			remove_modifier = avb_zombie_buff
#		}
#	}

	inline_script = {
		script = vanilla/pop_assembly/berg_posthumous_script
		tier = 2
	}
	inline_script = {
		script = building_resources/vanilla/posthumous
		tier = 2
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_posthumous_employment_center_2
		TRIGGER = " "
	}
}

building_toxic_bath_hive = {
	base_buildtime = @b1_time
	base_cap_amount = 1
	category = amenity
	icon = building_toxic_bath_hive

	potential = {
		owner = {
			is_hive_empire = yes
			has_valid_civic = civic_hive_toxic_baths
			NAND = {
				is_ai = yes
				prev = { has_any_industry_district = no }
			}
		}
	}
	allow = {
		owner = {
			OR = {
				is_ai = no
				prev = { has_any_industry_district = yes }
			}
		}
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
				AND = {
					is_ai = yes
					prev = { has_any_industry_district = no }
				}
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_toxic_bath_gestalt_script
		tier = 1
	}

	inline_script = {
		script = building_resources/vanilla/toxic_bath_hive
		tier = 1
	}
	upgrades = {
		"building_avb_toxic_bath_hive_2" #AVB
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = toxic_bath_hive
		TRIGGER = " "
	}
}
building_avb_toxic_bath_hive_2 = {
	base_buildtime = @avb_b2_time
	category = amenity
	can_build = no

	allow = {
		has_major_upgraded_capital = yes
		owner = {
			OR = {
				is_ai = no
				prev = { has_any_industry_district = yes }
			}
		}
	}

	potential = {
		avb_hg_changes = yes
		berg_has_avb_mod = yes
		owner = {
			is_hive_empire = yes
			has_valid_civic = civic_hive_toxic_baths
			NAND = {
				is_ai = yes
				prev = { has_any_industry_district = no }
			}
		}
	}
	prerequisites = {
		tech_avb_toxic_bath_hive_2
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
				AND = {
					is_ai = yes
					prev = { has_any_industry_district = no }
				}
			}
		}
	}

	triggered_desc = {
		trigger = {
			exists = owner
		}
		text = job_toxic_baths_effect_hive_desc
	}

	inline_script = {
		script = vanilla/pop_assembly/berg_toxic_bath_gestalt_script
		tier = 2
	}

	inline_script = {
		script = building_resources/vanilla/toxic_bath_hive
		tier = 2
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_toxic_bath_hive_2
		TRIGGER = " "
	}
}

building_toxic_bath_machine = {
	base_buildtime = @b1_time
	base_cap_amount = 1
	category = amenity
	icon = building_toxic_bath_machine

	potential = {
		owner = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_toxic_baths
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_machine_empire = no }
			owner = {
				NOT = { has_valid_civic = civic_machine_toxic_baths }
			}
		}
	}
	inline_script = {
		script = vanilla/pop_assembly/berg_toxic_bath_gestalt_script
		tier = 1
	}
	inline_script = {
		script = building_resources/vanilla/toxic_bath_machine
		tier = 1
	}
	upgrades = {
		"building_avb_toxic_bath_machine_2" #AVB
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = toxic_bath_machine
		TRIGGER = " "
	}
}
building_avb_toxic_bath_machine_2 = {
	base_buildtime = @avb_b2_time
	category = amenity
	can_build = no

	allow = {
		has_major_upgraded_capital = yes
	}

	potential = {
		avb_hg_changes = yes
		berg_has_avb_mod = yes
		owner = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_toxic_baths
		}
	}
	prerequisites = {
		tech_avb_toxic_bath_machine_2
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_machine_empire = no }
			owner = {
				NOT = { has_valid_civic = civic_machine_toxic_baths }
			}
		}
	}
	
	inline_script = {
		script = vanilla/pop_assembly/berg_toxic_bath_gestalt_script
		tier = 2
	}
	inline_script = {
		script = building_resources/vanilla/toxic_bath_machine
		tier = 2
	}
	triggered_desc = {
		trigger = {
			exists = owner
		}
		text = job_toxic_baths_effect_machine_desc
	}
	inline_script = {
		script = berg_desc/berg_building_desc
		BUILDING = avb_toxic_bath_machine_2
		TRIGGER = " "
	}
}
